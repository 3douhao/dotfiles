# set -g utf8
# set-window-option -g utf8 on

# set-option -g default-command "reattach-to-user-namespace -l zsh"

set -g default-command 'reattach-to-user-namespace $SHELL --login'
# Start window and pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Status bar refresh rate (seconds) 
set -g status-interval 1


# set pane colors - hilight the active pane 
# set-option -g pane-border-fg colour22 #base02 
# set-option -g pane-active-border-fg colour130 #base01

# renumber windows sequentially after closing any of them
set -g renumber-windows on

set -g mouse on

# remove administrative debris (session name, hostname, time) in status bar
# set -g status-left ''
set -g status-right ''

# soften status bar color from harsh green to light gray
# set -g status-bg '#666666'
set -g status-bg '#008b00'
set -g status-fg '#ffffff'

# don't rename windows automatically
set-option -g allow-rename off

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"


# prefix set to C-a
set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# Split window
 bind-key v split-window -h 
 # bind-key s split-window -v

#make the color of vim in tmux the same as original vim
set -g default-terminal "screen-256color"


# Easy config config reload
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


